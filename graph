#include <stdio.h>

#define MAX_VERTICES 10

typedef struct {
  int vertex;
  int weight;
} Edge;

typedef struct {
  int nVertices;
  Edge edges[MAX_VERTICES];
} Graph;

void createGraph(Graph *graph, int nVertices) {
  graph->nVertices = nVertices;
}

void addEdge(Graph *graph, int u, int v, int weight) {
  graph->edges[u].vertex = v;
  graph->edges[u].weight = weight;
}

void printGraph(Graph *graph) {
  for (int i = 0; i < graph->nVertices; i++) {
    printf("%d: ", i);
    for (int j = 0; j < graph->nVertices; j++) {
      if (graph->edges[i].vertex == j) {
        printf("%d(%d) ", j, graph->edges[i].weight);
      }
    }
    printf("\n");
  }
}

int main() {
  Graph graph;

  createGraph(&graph, 5);

  addEdge(&graph, 0, 1, 10);
  addEdge(&graph, 0, 2, 15);
  addEdge(&graph, 1, 2, 3);
  addEdge(&graph, 1, 3, 7);
  addEdge(&graph, 2, 3, 9);
  addEdge(&graph, 3, 4, 2);

  printGraph(&graph);

  return 0;
}
